<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>